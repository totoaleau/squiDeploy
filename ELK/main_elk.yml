---
- name: elk_playbook
  hosts: elk_server
  become: yes

  tasks:
    - name: Install Packages
      apt: name= state=latest update_cache=yes
      with_items:
        - apt-transport-https
        - openssl
        - default-jdk
        - net-tools

    # Install elasticsearch
    - name: Import the Elastic Key
      apt_key:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present

    - name: Adding Elastic APT repository
      apt_repository:
        repo: deb https://artifacts.elastic.co/packages/7.x/apt stable main
        state: present
        filename: elastic-7.x.list
        update_cache: yes

    - name: install elasticsearch
      apt:
        name: elasticsearch
        state: present
        update_cache: yes

    - name: reload systemd config
      systemd: daemon_reload=yes

    - name: set elasticsearch permissions
      file:
        path: /usr/share/elasticsearch
        state: directory
        recurse: yes
        owner: elasticsearch
        group: elasticsearch

    - name: Add or modify memlock, both soft and hard, limit for elasticsearch user.
      pam_limits:
        domain: elasticsearch
        limit_type: "-"
        limit_item: memlock
        value: unlimited
        comment: unlimited memory lock for elasticsearch

    - name: set LimitMEMLOCK to infinity.
      lineinfile:
        path: /usr/lib/systemd/system/elasticsearch.service
        insertafter: "LimitAS=infinity"
        line: "LimitMEMLOCK=infinity"
        state: present

    #Retrieving configuration files
    - name: "Install git"
      apt:
        name: git

    - name: Cloning squiDeploy repo
      git:
        repo: "https://github.com/totoaleau/squiDeploy"
        dest: /home/vagrant/squiDeploy

    - name: copying file with playbook for elasticsearch
      copy:
        src: /home/vagrant/squiDeploy/elasticsearch.yml
        dest: /etc/elasticsearch/
        remote_src: yes
        force: yes

    - name: copying file with playbook for elasticsearch
      become: true
      copy:
        src: /home/vagrant/squiDeploy/jvm.options
        dest: /etc/elasticsearch/
        remote_src: yes
        force: yes

    # Install Kibana
    - name: Update repositories cache and install Kibana
      apt:
        name: kibana
        update_cache: yes

    - name: copying file with playbook for Kibana
      become: true
      copy:
        src: /home/vagrant/squiDeploy/kibana.yml
        dest: /etc/kibana/
        remote_src: yes
        force: yes

    # Install filebeat
    - name: install filebeat
      apt:
        name: filebeat

    - name: copying file with playbook for FIlebeat
      become: true
      copy:
        src: /home/vagrant/squiDeploy/filebeat.yml
        dest: /etc/filebeat/
        remote_src: yes
        force: yes

    # Start elasticsearch service

    - name: Stop service cron on debian, if running
      systemd:
        name: elasticsearch
        state: stopped

    - name: restart elasticsearch after change configuration by configure-elastic-file role
      systemd:
        state: started
        name: elasticsearch

    - name: ensure elasticsearch is running
      systemd: state=started
        name=elasticsearch

    - name: enable service elasticsearch and ensure it is not masked
      systemd:
        name: elasticsearch
        enabled: yes
        masked: no

    - name: ensure elasticsearch is running
      systemd: state=started name=elasticsearch

    # Start Kibana service
    - name: Enabling Kibana service
      systemd:
        name: kibana
        enabled: yes
        daemon_reload: yes

    - name: Starting Kibana service
      systemd:
        name: kibana
        state: started

    - name: Ensure Kibana is running
      systemd: state=started name=kibana

    - name: Sleep for 120 seconds to let kibana start
      wait_for:
        timeout: 120

    # Start filebeat service
    - name: Command setup elasticsearch
      command: filebeat setup -e

    - name: Enabling filebeat service
      systemd:
        name: filebeat
        enabled: yes
        daemon_reload: yes

    - name: Starting filebeat service
      systemd:
        name: filebeat
        state: started

    - name: Ensure filebeat is running
      systemd: state=started name=filebeat
